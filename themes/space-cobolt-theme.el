(deftheme space-cobolt
  "Port of Cobolt VSCode theme by Wes Bos, for Spacemacs. Created 2023-04-28.")

(custom-theme-set-faces
 'space-cobolt
 '(hl-line ((t (:background "#1f4662"))))
 '(line-number ((t (:background "#122738" :foreground "#b2b2b2"))))
 '(line-number-current-line ((t (:foreground "#ffc600"))))
 '(clojure-keyword-face ((t (:foreground "#9effff"))))
 '(font-lock-comment-face ((t (:background "#193549" :foreground "#0088ff"))))
 '(font-lock-function-name-face ((t (:foreground "#ffc600"))))
 '(font-lock-string-face ((t (:foreground "#a5ff90" :slant italic))))
 '(font-lock-keyword-face ((t (:foreground "#fb94ff"))))
 '(font-lock-constant-face ((t (:foreground "#ff9d00"))))
 '(font-lock-type-face ((t (:foreground "#ff628c"))))
 '(font-lock-variable-name-face ((t (:foreground "#ffc600"))))
 '(rainbow-delimiters-depth-1-face ((t (:inherit rainbow-delimiters-base-face :foreground "grey55"))))
 '(rainbow-delimiters-depth-2-face ((t (:inherit rainbow-delimiters-base-face :foreground "#93a8c6"))))
 '(rainbow-delimiters-depth-3-face ((default (:inherit (rainbow-delimiters-base-face))) (((class color) (background light)) (:foreground "#909183")) (((class color) (background dark)) (:foreground "#b0b1a3"))))
 '(rainbow-delimiters-depth-4-face ((default (:inherit (rainbow-delimiters-base-face))) (((class color) (background light)) (:foreground "#709870")) (((class color) (background dark)) (:foreground "#97b098"))))
 '(rainbow-delimiters-depth-5-face ((default (:inherit (rainbow-delimiters-base-face))) (((class color) (background light)) (:foreground "#907373")) (((class color) (background dark)) (:foreground "#aebed8"))))
 '(rainbow-delimiters-depth-6-face ((default (:inherit (rainbow-delimiters-base-face))) (((class color) (background light)) (:foreground "#6276ba")) (((class color) (background dark)) (:foreground "#b0b0b3"))))
 '(rainbow-delimiters-depth-7-face ((default (:inherit (rainbow-delimiters-base-face))) (((class color) (background light)) (:foreground "#858580")) (((class color) (background dark)) (:foreground "#90a890"))))
 '(rainbow-delimiters-depth-8-face ((default (:inherit (rainbow-delimiters-base-face))) (((class color) (background light)) (:foreground "#80a880")) (((class color) (background dark)) (:foreground "#a2b6da"))))
 '(rainbow-delimiters-unmatched-face ((default (:inherit (rainbow-delimiters-base-error-face)))))
 '(rainbow-delimiters-mismatched-face ((default (:inherit (rainbow-delimiters-unmatched-face)))))
 '(clojure-character-face ((t (:inherit font-lock-string-face :foreground "#ff9d00"))))
 '(font-lock-doc-face ((t (:foreground "#b2b2b2"))))
 '(font-lock-doc-markup-face ((t (:inherit (font-lock-constant-face)))))
 '(font-lock-regexp-grouping-construct ((t (:foreground "#ff0088"))))
 '(font-lock-regexp-grouping-backslash ((t (:foreground "#ff9d00" :slant normal))))
 '(link ((t (:foreground "#ffc600"))))
 '(outline-1 ((t (:foreground "#ffc600" :weight bold))))
 '(outline-2 ((t (:foreground "#ff9d00"))))
 '(outline-3 ((t (:foreground "#a5ff90" :slant italic))))
 '(outline-4 ((t (:foreground "#ff628c"))))
 '(widget-field ((t (:extend t :background "#122738" :foreground "#fff"))))
 '(region ((t (:extend t :background "#003b8b"))))
 '(mode-line ((t (:background "#122738" :foreground "white" :box (:line-width (1 . -1) :style released-button)))))
 '(mode-line-inactive ((t (:inherit mode-line :background "#272727" :foreground "grey80" :box (:line-width (1 . -1) :color "grey40") :weight light))))
 '(mode-line-buffer-id ((t (:foreground "#ffc600" :weight bold))))
 '(mode-line-buffer-id-inactive ((t (:inherit mode-line-buffer-id :foreground "white" :weight normal))))
 '(mode-line-highlight ((((supports :box t) (class color) (min-colors 88)) (:box (:line-width (2 . 2) :color "grey40" :style released-button))) (t (:inherit (highlight)))))
 '(mode-line-emphasis ((t (:weight bold))))
 '(fringe ((t (:background "grey10"))))
 '(spaceline-highlight-face ((t (:inherit 'mode-line :foreground "#3E3D31" :background "DarkGoldenrod2"))))
 '(spaceline-read-only ((t (:background "#122738" :foreground "#ffc600"))))
 '(spaceline-unmodified ((t (:inherit 'mode-line :foreground "#3E3D31" :background "DarkGoldenrod2"))))
 '(spaceline-evil-visual ((t (:inherit 'mode-line :foreground "#3E3D31" :background "gray"))))
 '(spaceline-evil-motion ((t (:inherit 'mode-line :foreground "#3E3D31" :background "plum3"))))
 '(spaceline-evil-insert ((t (:background "#a5ff90" :foreground "black"))))
 '(helm-buffer-directory ((t (:foreground "#b2b2b2" :weight bold))))
 '(helm-buffer-file ((t (:extend t :inherit (font-lock-builtin-face)))))
 '(menu ((((type tty)) (:inverse-video t)) (((type x-toolkit)) nil) (t (:inverse-video t))))
 '(helm-selection ((t (:background "#234e6d"))))
 '(helm-buffer-size ((((background dark)) (:foreground "RosyBrown" :extend t)) (((background light)) (:foreground "SlateGray" :extend t))))
 '(helm-buffer-archive ((t (:foreground "Gold" :extend t))))
 '(helm-buffer-modified ((t (:extend t :inherit (font-lock-comment-face)))))
 '(helm-ff-directory ((t (:foreground "#ffc600"))))
 '(helm-match ((((background light)) (:foreground "#b00000" :extend t)) (((background dark)) (:foreground "gold1" :extend t))))
 '(helm-ff-dotted-directory ((t (:inherit helm-ff-directory :extend t :weight semi-bold))))
 '(helm-ff-truename ((t (:inherit font-lock-string-face :extend t :foreground "#a5ff90"))))
 '(helm-ff-pipe ((t (:background "black" :foreground "yellow" :extend t))))
 '(helm-ff-dirs ((t (:inherit font-lock-function-name-face :extend t))))
 '(helm-ff-suid ((t (:foreground "white" :background "red" :extend t))))
 '(helm-ff-prefix ((t (:foreground "black" :background "yellow" :extend t))))
 '(helm-ff-file ((t (:inherit font-lock-builtin-face :extend t :foreground "white"))))
 '(helm-header ((t (:extend t :inherit (header-line)))))
 '(helm-source-header ((t (:extend t :background "#122738" :foreground "#b2b2b2" :weight bold :height 1.3 :family "Sans Serif"))))
 '(helm-ff-file-extension ((t (:extend t :foreground "LightSteelBlue"))))
 '(font-lock-builtin-face ((t (:foreground "LightSteelBlue"))))
 '(helm-command-active-mode ((t (:inherit (font-lock-builtin-face)))))
 '(helm-action ((t (:underline (:color foreground-color :style line) :extend t))))
 '(helm-prefarg ((((background dark)) (:foreground "green" :extend t)) (((background light)) (:foreground "red" :extend t))))
 '(helm-minibuffer-prompt ((t (:inherit minibuffer-prompt :extend t))))
 '(minibuffer-prompt ((t (:foreground "#ff9d00"))))
 '(helm-ff-symlink ((t (:foreground "#ff628c"))))
 '(helm-ff-nofile ((t (:extend t :inherit (helm-ff-file)))))
 '(helm-ff-denied ((t (:background "black" :foreground "red" :extend t))))
 '(show-paren-match ((t (:foreground "brightgreen" :underline t))))
 '(cider-result-overlay-face ((t (:background "#122738" :foreground "#ffc600"))))
 '(cider-repl-result-face ((t nil)))
 '(cider-enlightened-face ((t (:box (:line-width (1 . -1) :color "#990" :style nil) :inherit (cider-result-overlay-face)))))
 '(cider-instrumented-face ((t (:underline (:color foreground-color :style line) :background "#800"))))
 '(cider-fringe-good-face ((((class color) (background light)) (:foreground "lightgreen")) (((class color) (background dark)) (:foreground "darkgreen"))))
 '(cider-docview-strong-face ((t (:weight bold :underline (:color foreground-color :style line) :inherit (default)))))
 '(eval-sexp-fu-flash ((t (:background "#003b8b"))))
 '(default ((t (:background "#193549" :foreground "#f2f2f2"))))
 '(org-table ((t (:inherit default)))))

(provide-theme 'space-cobolt)
